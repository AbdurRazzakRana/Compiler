# MIPS CODE GENERATED BY Compliler Class

.data
_L0: .asciiz    "True" 
_L1: .asciiz    "False" 

.align 2
.text

.globl main

main:			# function definition
	move $a1, $sp		# Activation Record Carve out copy SP
	subi $a1 $a1 12		# Activation Record carve out copy size of function
	sw $ra, ($a1)		# Store Return address 
	sw $sp 4($a1)		# Store the old Stack pointer
	move $sp, $a1		# Make SP the current activation record

	li $a0, 5		# Expression is a constant
	sw $a0, 8($sp)		# LHS of expression stored into temp memory
	li $a0, 7		# Expression is a constant
	move $a1, $a0		# RHS on a1
	lw $a0, 8($sp)		# Getting LHS into a0 from mem
	slt $a0, $a0, $a1		# Expression Less Than
	beq $a0 $0 _L2		# IF branch decision, taken to else condidion or continue to if body
	la $a0, _L0		# The string address
	li $v0, 4		# About to print a string
	syscall		# Call write string


	j _L3		# As else is not taken, jump to loop end
_L2:		#Else target level if the branch is taken
	la $a0, _L1		# The string address
	li $v0, 4		# About to print a string
	syscall		# Call write string


_L3:		# End of If Scope
	li $a0, 0		# RETURN has no specified value set to 0
	lw $ra ($sp)		# restore old environment RA
	lw $sp 4($sp)		# Return from function store SP

	li $v0, 10		# Exit from Main, we are done
	syscall		# Exit everything
			# END OF FUNCTION main

