# MIPS CODE GENERATED BY Compliler Class

.data
_L0: .asciiz    "enter X" 
_L1: .asciiz    " x is " 
_L2: .asciiz    "\n" 

.align 2
.text

.globl main

main:			# function definition
	move $a1, $sp		# Activation Record Carve out copy SP
	subi $a1, $a1, 12		# Activation Record carve out copy size of function
	sw $ra, ($a1)		# Store Return address 
	sw $sp 4($a1)		# Store the old Stack pointer
	move $sp, $a1		# Make SP the current activation record

	la $a0, _L0		# The string address
	li $v0, 4		# About to print a string
	syscall		# Call write string


	li $v0, 5		# about to read in value
	syscall		# read in value $v0 now has the read in value
	sw $v0, ($a0)		# store read in vlaue to memory


	la $a0, _L1		# The string address
	li $v0, 4		# About to print a string
	syscall		# Call write string


	lw $a0 , ($a0)		# Expression is a VAR
	li $v0, 1		# About to print a Number
	syscall		# Call write number


	la $a0, _L2		# The string address
	li $v0, 4		# About to print a string
	syscall		# Call write string


	li $a0, 0		# RETURN has no specified value set to 0
	lw $ra ($sp)		# restore old environment RA
	lw, $sp 4($sp)		# Return from function store SP

	li $v0 10		# Exit from Main, we are done
	syscall		# Exit everything
			# END OF FUNCTION main

